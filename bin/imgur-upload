#!/usr/bin/env node

// I"m going to be a terrible person and explicitly require a globally installed module.
// Sorry, Mom.
var rest = require("/usr/local/lib/node_modules/restler"),
    fs = require('fs');

var env = function(prop) {
  if (process.env.hasOwnProperty(prop)) {
    return process.env[prop];
  }

  throw new Error("Unable to find environment variable - " + prop);
};

var config = {
  imgur: {
    refreshToken: env("IMGUR_REFRESH_TOKEN"),
    clientId: env("IMGUR_CLIENT_ID"),
    clientSecret: env("IMGUR_CLIENT_SECRET"),
  },

  endpoints: {
    token: "https://api.imgur.com/oauth2/token",
    upload: "https://api.imgur.com/3/image"
  }
};

var contentType = function(str) {
  if (/\.jpe?g$/.test(str)) {
    return "image/jpeg";
  }

  if (/\.png$/.test(str)) {
    return "image/png";
  }

  if (/\.gif$/.test(str)) {
    return "image/gif";
  }
}

var Imgur = {
  accessToken: null,

  refreshToken: function(callback) {
    rest.postJson(config.endpoints.token, {
      refresh_token: config.imgur.refreshToken,
      client_id: config.imgur.clientId,
      client_secret: config.imgur.clientSecret,
      grant_type: 'refresh_token'
    }).on('complete', function(data, response) {
      if (data.access_token) {
        Imgur.accessToken = data.access_token;
      } else {
        throw new Error("Unable to obtain access_token from Imgur.")
      }

      callback();
    });
  },

  upload: function(path) {
    var exists = fs.existsSync(path);

    if (!exists) {
      throw new Error("Specified file (" + path + ") doesn't exist.");
    }

    Imgur.refreshToken(function() {
      var token = Imgur.accessToken,
          stat = fs.statSync(path);

      var type = contentType(path);

      rest.post(config.endpoints.upload, {
        multipart: true,

        headers: {
          'Authorization': "Bearer " + token
        },

        data: {
          'image': rest.file(path, null, stat.size, null, type)
        }
      }).on('complete', function(data, response) {
        if (data.status == 200) {
          console.log(data.data.link);
        } else {
          throw new Error("An error occured uploading the image. " + data);
        }
      });
    });
  }
};

Imgur.upload(process.argv[2]);
